'use strict';

var _classCallCheck = require('babel-runtime/helpers/class-call-check');
_classCallCheck = 'default' in _classCallCheck ? _classCallCheck['default'] : _classCallCheck;
var _regeneratorRuntime = require('babel-runtime/regenerator');
_regeneratorRuntime = 'default' in _regeneratorRuntime ? _regeneratorRuntime['default'] : _regeneratorRuntime;
var _inherits = require('babel-runtime/helpers/inherits');
_inherits = 'default' in _inherits ? _inherits['default'] : _inherits;

var babelHelpers = {};

babelHelpers.inherits = function (subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      enumerable: false,
      writable: true,
      configurable: true
    }
  });
  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
};

babelHelpers.classCallCheck = function (instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
};
var utils={ /**
     * Trucates the string and adds ellipsis at the end.
     * @param string        The string to be truncated
     * @param n             Length to which it should be truncated
     * @returns {string}    The truncated string
     */truncate:function truncate(string,n){return string.substr(0,n - 1) + (string.length > n?'...':'');}, /**
         * Returns an array after removing the duplicates.
         * @param array         The array containing the duplicates
         * @returns {Array}     Array with unique values.
         */getUnique:function getUnique(array){var u={},a=[];array.forEach(function(value){if(!u.hasOwnProperty(value)){a.push(value);u[value] = 1;}});return a;}, /**
         * Converts a string into legitimate url.
         * @param string
         */toUrl:function toUrl(string){return string.indexOf('//') === -1?'//' + string:string;}, /**
         * Extends an Object
         * @param destination
         * @param source
         * @returns {*}
         */deepExtend:function deepExtend(destination,source){for(var property in source) {if(source[property] && source[property].constructor === Object){destination[property] = destination[property] || {};this.deepExtend(destination[property],source[property]);}else {destination[property] = source[property];}}return destination;},escapeRegExp:function escapeRegExp(str){return str.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g,'\\$&');}, /**
         * Sort an array of objects based on the index value
         * @param  {Array} arr Array to be sorted
         * @return {Array}     Sorted array
         */sortObject:function sortObject(arr){return arr.sort(function(a,b){return a.index - b.index;});}, /**
         * Creates the string of the iframes after sorting them and finally returning a string
         * @param  {sring} str    String to which the created text has to be added
         * @param  {object} embeds Sorted array of iframe html
         * @return {string}        String to be rendered
         */createText:function createText(str,embeds){var sortedEmbeds=this.sortObject(embeds);for(var i=0;i < sortedEmbeds.length;i++) {str += ' ' + sortedEmbeds[i].text;}return str;}, /**
         * Matches the string and finds the substrings matching to the provided regex pattern
         * @param  {object} regex Regex pattern
         * @param  {string} input The string to be analyzed
         * @return {object}       Returns the matched substring with their corresponding positions
         */matches:function matches(regex,input){return regex.exec(input);}, /**
         * Checks wheteher a particular service should be embedded or not based on
         * the setting provided by the user
         * @param  {object} options The options provided by the user
         * @param  {string} service Name of the service for which the condition is to be analyzed
         * @return {boolean}        True if it should be embedded
         */ifEmbed:function ifEmbed(options,service){return options.excludeEmbed.indexOf(service) == -1 && options.excludeEmbed !== 'all';},ifInline:function ifInline(options,service){return options.inlineEmbed.indexOf(service) == -1 && options.inlineEmbed !== 'all';}, /**
         * Calculates the dimensions for the elements based on a aspect ratio
         * @param  {object} options Plugin options
         * @return {object}         The width and height of the elements
         */dimensions:function dimensions(options){var dimensions={width:options.videoWidth,height:options.videoHeight};if(options.videoHeight && options.videoWidth){return dimensions;}else if(options.videoHeight){dimensions.width = options.videoHeight / 3 * 4;return dimensions;}else if(options.videoWidth){dimensions.height = dimensions.width / 4 * 3;return dimensions;}else {var _ref=[800,600];dimensions.width = _ref[0];dimensions.height = _ref[1];return dimensions;}}, /**
         * Returns a cloned object
         * @param  {object} obj
         * @return {object}     cloned object
         */cloneObject:function cloneObject(obj){if(obj === null || typeof obj !== 'object')return obj;var temp=obj.constructor(); // give temp the original obj's constructor
for(var key in obj) {temp[key] = this.cloneObject(obj[key]);}return temp;}};

var helper$1={ /**
     * Plays the video after clicking on the thumbnail
     * @param  {string} className The class name on which click is to be listened
     * @param  {object} options   Options object
     * @return {null}
     */play:function play(className,options){var classes=document.getElementsByClassName(className);var _loop=function(i){classes[i].onclick = function(){options.onVideoShow();var url=classes[i].getAttribute('data-ejs-url') + "?autoplay=true";var template=this.template(url,options);classes[i].parentNode.parentNode.innerHTML = template;};};for(var i=0;i < classes.length;i++) {_loop(i);}}, /**
         * Common template for vimeo and youtube iframes
         * @param  {string} url     URL of the embedding video
         * @param  {object} options Options object
         * @return {string}         compiled template with variables replaced
         */template:function template(url,options){var dimensions=utils.dimensions(options);return '<div class="ejs-video-player ejs-embed">\n        <iframe src="' + url + '" frameBorder="0" width="' + dimensions.width + '" height="' + dimensions.height + '"></iframe>\n        </div>';}, /**
         * Template for showing vimeo and youtube video details
         * @param  {object} data     Object containing the variable values as key-value pair
         * @param  {string} embedUrl URL of the video
         * @return {string}          template with variables replaced
         */detailsTemplate:function detailsTemplate(data,embedUrl){return '<div class="ejs-video ejs-embed">\n        <div class="ejs-video-preview">\n        <div class="ejs-video-thumb" data-ejs-url="' + embedUrl + '">\n        <div class="ejs-thumb" style="background-image:url(' + data.thumbnail + ')"></div>\n        <i class="fa fa-play-circle-o"></i>\n        </div>\n        <div class="ejs-video-detail">\n        <div class="ejs-video-title">\n        <a href="' + data.url + '">\n        ' + data.title + '\n        </a>\n        </div>\n        <div class="ejs-video-desc">\n        ' + data.description + '\n        </div>\n        <div class="ejs-video-stats">\n        <span>\n        <i class="fa fa-eye"></i>' + data.views + '\n        </span>\n        <span>\n        <i class="fa fa-heart"></i>' + data.likes + '\n        </span>\n        </div>\n        </div>\n        </div>\n        </div>';}, /**
         * Applies video.js to all audio and video dynamically
         * @param  {object} options Options object
         * @return {null}
         */applyVideoJS:function applyVideoJS(options){var dimensions=utils.dimensions(options);options.videojsOptions.width = dimensions.width;options.videojsOptions.height = dimensions.height;if(options.videoJS){if(!window.videojs)throw new ReferenceError("You have enabled videojs but you haven't loaded the library.Find it at http://videojs.com/");var elements=options.element.getElementsByClassName('ejs-video-js');for(var i=0;i < elements.length;i++) {videojs(elements[i],options.videojsOptions,function(){return options.videojsCallback();});}}}, /**
         * Destroys the onclick event for opening the video template from the details template
         * @param  {className} className
         * @return {null}
         */destroy:function destroy(className){var classes=document.getElementsByClassName(className);for(var i=0;i < classes.length;i++) {classes[i].onclick = null;}}};

var Twitter=(function(){function Twitter(input,output,options,embeds){_classCallCheck(this,Twitter);this.input = input;this.output = output;this.options = options;this.embeds = embeds;this.regex = /https:\/\/twitter\.com\/\w+\/\w+\/\d+/gi;this.service = 'twitter';this.load = this.load.bind(this);this.options.element.addEventListener('rendered',this.load,false);} /**
     * Fetches the data from twitter's oEmbed API
     * @param  {string} url URL of the tweet
     * @return {object}     data containing the tweet info
     */Twitter.prototype.tweetData = function tweetData(url){var config,apiUrl,response,data;return _regeneratorRuntime.async(function tweetData$(context$2$0){while(1) switch(context$2$0.prev = context$2$0.next){case 0:config = this.options.tweetOptions;apiUrl = 'https://api.twitter.com/1/statuses/oembed.json?omit_script=true&url=' + url + '&maxwidth=' + config.maxWidth + '&hide_media=' + config.hideMedia + '&hide_thread=' + config.hideThread + '&align=' + config.align + '&lang=' + config.lang;context$2$0.next = 4;return _regeneratorRuntime.awrap(fetchJsonp(apiUrl,{credentials:'include'}));case 4:response = context$2$0.sent;context$2$0.next = 7;return _regeneratorRuntime.awrap(response.json());case 7:data = context$2$0.sent;return context$2$0.abrupt('return',data);case 9:case 'end':return context$2$0.stop();}},null,this);}; /**
     * Load twitter widgets
     * @return {}
     */Twitter.prototype.load = function load(){var _this=this;twttr.widgets.load(this.options.element); //here this refers to the element
//Execute the function after the widget is loaded
twttr.events.bind('loaded',function(){_this.options.onTweetsLoad();});};Twitter.prototype.process = function process(){var regexInline,match,url,data,text;return _regeneratorRuntime.async(function process$(context$2$0){while(1) switch(context$2$0.prev = context$2$0.next){case 0:context$2$0.prev = 0;if(utils.ifInline(this.options,this.service)){context$2$0.next = 15;break;}regexInline = this.options.link?new RegExp('([^>]*' + this.regex.source + ')</a>','gi'):new RegExp('([^\\s]*' + this.regex.source + ')','gi');match = undefined;case 4:if(!((match = utils.matches(regexInline,this.output)) !== null)){context$2$0.next = 13;break;}url = this.options.link?match[0].slice(0,-4):match[0];context$2$0.next = 8;return _regeneratorRuntime.awrap(this.tweetData(url));case 8:data = context$2$0.sent;text = data.html;if(this.options.link){this.output = !this.options.inlineText?this.output.replace(match[0],text + '</a>'):this.output.replace(match[0],match[0] + text);}else {this.output = !this.options.inlineText?this.output.replace(match[0],text):this.output.replace(match[0],match[0] + text);}context$2$0.next = 4;break;case 13:context$2$0.next = 23;break;case 15:match = undefined;case 16:if(!((match = utils.matches(this.regex,this.input)) !== null)){context$2$0.next = 23;break;}context$2$0.next = 19;return _regeneratorRuntime.awrap(this.tweetData(match[0]));case 19:data = context$2$0.sent;this.embeds.push({text:data.html,index:match.index});context$2$0.next = 16;break;case 23:return context$2$0.abrupt('return',[this.output,this.embeds]);case 26:context$2$0.prev = 26;context$2$0.t0 = context$2$0['catch'](0);console.log(context$2$0.t0);case 29:case 'end':return context$2$0.stop();}},null,this,[[0,26]]);};return Twitter;})();

var Base=(function(){function Base(input,output,options,embeds){_classCallCheck(this,Base);this.input = input;this.output = output;this.options = options;this.embeds = embeds;}Base.prototype.process = function process(){var _this=this;if(!utils.ifInline(this.options,this.service)){var regexInline=this.options.link?new RegExp('([^>]*' + this.regex.source + ')</a>','gm'):new RegExp('([^\\s]*' + this.regex.source + ')','gm');this.output = this.output.replace(regexInline,function(match){if(_this.options.link){return !_this.options.inlineText?_this.template(match.slice(0,-4)) + '</a>':match + _this.template(match.slice(0,-4));}else {return !_this.options.inlineText?_this.template(match):match + _this.template(match);}});}else {var match=undefined;while((match = utils.matches(this.regex,this.input)) !== null) {var text=this.template(match[0]);this.embeds.push({text:text,index:match.index});}}return [this.output,this.embeds];};return Base;})();

var Basic=(function(_Base){_inherits(Basic,_Base);function Basic(input,output,options,embeds){_classCallCheck(this,Basic);_Base.call(this,input,output,options,embeds);this.regex = /((?:https?):\/\/\S*\.(?:gif|jpg|jpeg|tiff|png|svg|webp))/gi;this.service = 'image';}Basic.prototype.template = function template(match){return '<div class="ejs-image ejs-embed"><div class="ne-image-wrapper"><img src="' + match + '"/></div></div>';};return Basic;})(Base);

var Instagram=(function(_Base){_inherits(Instagram,_Base);function Instagram(input,output,options,embeds){_classCallCheck(this,Instagram);_Base.call(this,input,output,options,embeds);this.regex = /instagram.com\/p\/[a-zA-Z0-9]+/gi;this.service = 'instagram';}Instagram.prototype.template = function template(match){var dimensions=utils.dimensions(this.options);return '<div class="ejs-embed"><iframe src="' + utils.toUrl(match) + '/embed/" width="' + dimensions.width + '" height="' + dimensions.height + '"></iframe></div>';};return Instagram;})(Base);

var Flickr=(function(_Base){_inherits(Flickr,_Base);function Flickr(input,output,options,embeds){_classCallCheck(this,Flickr);_Base.call(this,input,output,options,embeds);this.regex = /flickr.com\/[a-z]+\/[a-zA-Z@_$!\d]+\/[\d]+/gi;this.service = 'flickr';}Flickr.prototype.template = function template(match){var dimensions=utils.dimensions(this.options);return '<div class="ejs-embed">\n\t\t\t<div class="ne-image-wrapper">\n\t\t\t\t<iframe src="' + utils.toUrl(match) + '/player/" width="' + dimensions.width + '" height="' + dimensions.height + '"></iframe>\n\t\t\t</div>\n\t\t</div>';};return Flickr;})(Base);

var Image=(function(){function Image(input,output,options,embeds){_classCallCheck(this,Image);this.input = input;this.output = output;this.options = options;this.embeds = embeds;}Image.prototype.process = function process(){try{var input=this.input;var output=this.output;var embeds=this.embeds;var _ref=utils.ifEmbed(this.options,'flickr') && true?new Flickr(input,output,this.options,embeds).process():[output,embeds];output = _ref[0];embeds = _ref[1];var _ref2=utils.ifEmbed(this.options,'instagram') && true?new Instagram(input,output,this.options,embeds).process():[output,embeds];output = _ref2[0];embeds = _ref2[1];var _ref3=this.options.imageEmbed && true?new Basic(input,output,this.options,embeds).process():[output,embeds];output = _ref3[0];embeds = _ref3[1];return [output,embeds];}catch(error) {console.log(error);}};return Image;})();

var BasicAudio=(function(_Base){_inherits(BasicAudio,_Base);function BasicAudio(input,output,options,embeds){_classCallCheck(this,BasicAudio);_Base.call(this,input,output,options,embeds);this.regex = /((?:https?):\/\/\S*\.(?:wav|mp3|ogg))/gi;this.service = 'audio';}BasicAudio.prototype.template = function template(match){return '<div class="ejs-audio ejs-embed"><audio src="' + match + '" controls class="video-js ejs-video-js"></audio></div>';};return BasicAudio;})(Base);

var Spotify=(function(_Base){_inherits(Spotify,_Base);function Spotify(input,output,options,embeds){_classCallCheck(this,Spotify);_Base.call(this,input,output,options,embeds);this.regex = /spotify.com\/track\/[a-zA-Z0-9_]+/gi;this.service = 'spotify';}Spotify.prototype.template = function template(match){var a=match.split('/');var id=a[a.length - 1];return '<div class="ejs-embed"><iframe src="https://embed.spotify.com/?uri=spotify:track:' + id + '" height="80"></iframe></div>';};return Spotify;})(Base);

var SoundCloud=(function(_Base){_inherits(SoundCloud,_Base);function SoundCloud(input,output,options,embeds){_classCallCheck(this,SoundCloud);_Base.call(this,input,output,options,embeds);this.regex = /(soundcloud.com)\/[a-zA-Z0-9-_]+\/[a-zA-Z0-9-_]+/gi;this.service = 'soundcloud';}SoundCloud.prototype.template = function template(match){var config=this.options.soundCloudOptions;return '<div class="ejs-embed">\n\t\t<iframe height="160" scrolling="no" src="https://w.soundcloud.com/player/?url=' + match + '\n\t\t&auto_play     = ' + config.autoPlay + '\n\t\t&hide_related  = ' + config.hideRelated + '\n\t\t&show_comments = ' + config.showComments + '\n\t\t&show_user     = ' + config.showUser + '\n\t\t&show_reposts  = ' + config.showReposts + '\n\t\t&visual        = ' + config.visual + '\n\t\t&download      = ' + config.download + '\n\t\t&color         = ' + config.themeColor + '\n\t\t&theme_color   = ' + config.themeColor + '"></iframe>\n\t\t</div>';};return SoundCloud;})(Base);

var Audio=(function(){function Audio(input,output,options,embeds){_classCallCheck(this,Audio);this.input = input;this.output = output;this.options = options;this.embeds = embeds;}Audio.prototype.process = function process(){try{var input=this.input;var output=this.output;var options=this.options;var embeds=this.embeds;var _ref=utils.ifEmbed(options,'soundcloud') && false?new SoundCloud(input,output,options,embeds).process():[output,embeds];output = _ref[0];embeds = _ref[1];var _ref2=utils.ifEmbed(options,'spotify') && true?new Spotify(input,output,options,embeds).process():[output,embeds];output = _ref2[0];embeds = _ref2[1];var _ref3=this.options.audioEmbed && true?new BasicAudio(input,output,options,embeds).process():[output,embeds];output = _ref3[0];embeds = _ref3[1];return [output,embeds];}catch(error) {console.log(error);}};return Audio;})();

var Gmap=(function(){function Gmap(input,output,options,embeds){_classCallCheck(this,Gmap);this.input = input;this.output = output;this.options = options;this.embeds = embeds;this.service = 'map';this.regex = /@\((.+)\)/gi;}Gmap.prototype.getCoordinate = function getCoordinate(location){var url,response,data,latitude,longitude;return _regeneratorRuntime.async(function getCoordinate$(context$2$0){while(1) switch(context$2$0.prev = context$2$0.next){case 0:url = 'http://maps.googleapis.com/maps/api/geocode/json?address=' + location + '&sensor=false';context$2$0.next = 3;return _regeneratorRuntime.awrap(fetch(url));case 3:response = context$2$0.sent;context$2$0.next = 6;return _regeneratorRuntime.awrap(response.json());case 6:data = context$2$0.sent;latitude = data.results[0].geometry.location.lat;longitude = data.results[0].geometry.location.lng;return context$2$0.abrupt('return',[latitude,longitude]);case 10:case 'end':return context$2$0.stop();}},null,this);};Gmap.prototype.template = function template(match,latitude,longitude){var location=match.split('(')[1].split(')')[0];var config=this.options.mapOptions;var dimensions=utils.dimensions(this.options);if(config.mode === 'place'){return '<div class="ejs-embed ejs-map"><iframe width="' + dimensions.width + '" height="' + dimensions.height + '" src="https://www.google.com/maps/embed/v1/place?key=' + this.options.googleAuthKey + '&q=' + location + '"></iframe></div>';}else if(config.mode === 'streetview'){return '<div class="ejs-embed ejs-map"><iframe width="' + dimensions.width + '" height="' + dimensions.height + '" src="https://www.google.com/maps/embed/v1/streetview?key=' + this.options.googleAuthKey + '&location=' + latitude + ',' + longitude + '&heading=210&pitch=10&fov=35"></iframe></div>';}else if(config.mode === 'view'){return '<div class="ejs-embed ejs-map"><iframe width="' + dimensions.width + '" height="' + dimensions.height + '" src="https://www.google.com/maps/embed/v1/view?key=' + this.options.googleAuthKey + '&center=' + latitude + ',' + longitude + '&zoom=18&maptype=satellite"></iframe></div>';}};Gmap.prototype.locationText = function locationText(match){return match.split('(')[1].split(')')[0];};Gmap.prototype.process = function process(){var match,_loop;return _regeneratorRuntime.async(function process$(context$2$0){var _this2=this;while(1) switch(context$2$0.prev = context$2$0.next){case 0:match = undefined;_loop = function callee$2$0(){var _ref,latitude,longitude,text;return _regeneratorRuntime.async(function callee$2$0$(context$3$0){var _this=this;while(1) switch(context$3$0.prev = context$3$0.next){case 0:if(!(this.options.mapOptions.mode !== 'place')){context$3$0.next = 6;break;}context$3$0.next = 3;return _regeneratorRuntime.awrap(this.getCoordinate(match[0]));case 3:context$3$0.t0 = context$3$0.sent;context$3$0.next = 7;break;case 6:context$3$0.t0 = [null,null];case 7:_ref = context$3$0.t0;latitude = _ref[0];longitude = _ref[1];text = this.template(match[0],latitude,longitude);if(!utils.ifInline(this.options,this.service)){this.output = this.output.replace(this.regex,function(regexMatch){return '<span class="ejs-location">' + _this.locationText(regexMatch) + '</span>' + text;});}else {this.embeds.push({text:text,index:match.index});this.output = this.output.replace(this.regex,function(regexMatch){return '<span class="ejs-location">' + _this.locationText(regexMatch) + '</span>';});}case 12:case 'end':return context$3$0.stop();}},null,_this2);};case 2:if(!((match = utils.matches(this.regex,this.output)) !== null)){context$2$0.next = 7;break;}context$2$0.next = 5;return _regeneratorRuntime.awrap(_loop());case 5:context$2$0.next = 2;break;case 7:return context$2$0.abrupt('return',[this.output,this.embeds]);case 8:case 'end':return context$2$0.stop();}},null,this);};return Gmap;})();

var Vimeo=(function(){function Vimeo(input,output,options,embeds){_classCallCheck(this,Vimeo);this.input = input;this.output = output;this.options = options;this.embeds = embeds;this.regex = /https?:\/\/(?:www\.)?vimeo.com\/(?:channels\/(?:\w+\/)?|groups\/([^\/]*)\/videos\/|album\/(\d+)\/video\/|)(\d+)(?:$|\/|\?)*/gi;this.service = 'vimeo';}Vimeo.prototype.formatData = function formatData(data){return {title:data.title,thumbnail:data.thumbnail_medium,rawDescription:data.description.replace(/\n/g,'<br/>').replace(/&#10;/g,'<br/>'),views:data.stats_number_of_plays,likes:data.stats_number_of_likes,description:utils.truncate(data.description.replace(/((<|&lt;)br\s*\/*(>|&gt;)\r\n)/g,' '),150),url:data.url,id:data.id,host:'vimeo'};};Vimeo.prototype.data = function data(id){var url,response,data;return _regeneratorRuntime.async(function data$(context$2$0){while(1) switch(context$2$0.prev = context$2$0.next){case 0:context$2$0.prev = 0;url = 'https://vimeo.com/api/v2/video/' + id + '.json';context$2$0.next = 4;return _regeneratorRuntime.awrap(fetch(url));case 4:response = context$2$0.sent;context$2$0.next = 7;return _regeneratorRuntime.awrap(response.json());case 7:data = context$2$0.sent;return context$2$0.abrupt('return',data[0]);case 11:context$2$0.prev = 11;context$2$0.t0 = context$2$0['catch'](0);console.log(context$2$0.t0);case 14:case 'end':return context$2$0.stop();}},null,this,[[0,11]]);};Vimeo.prototype.process = function process(){var regexInline,match,id,embedUrl,data,text;return _regeneratorRuntime.async(function process$(context$2$0){while(1) switch(context$2$0.prev = context$2$0.next){case 0:context$2$0.prev = 0;if(utils.ifInline(this.options,this.service)){context$2$0.next = 21;break;}regexInline = this.options.link?new RegExp('([^>]*' + this.regex.source + ')</a>','gi'):new RegExp('([^\\s]*' + this.regex.source + ')','gi');match = undefined;case 4:if(!((match = utils.matches(regexInline,this.output)) !== null)){context$2$0.next = 19;break;}id = this.options.link?match[0].slice(0,-4).split('/').slice(-1).pop():match[0].split('/').slice(-1).pop();embedUrl = 'https://player.vimeo.com/video/' + id;data = undefined,text = undefined;if(!this.options.videoDetails){context$2$0.next = 15;break;}context$2$0.next = 11;return _regeneratorRuntime.awrap(this.data(id));case 11:data = context$2$0.sent;text = helper.detailsTemplate(this.formatData(data),embedUrl);context$2$0.next = 16;break;case 15:text = helper.template(embedUrl,this.options);case 16:if(this.options.link){this.output = !this.options.inlineText?this.output.replace(match[0],text + '</a>'):this.output.replace(match[0],match[0] + text);}else {this.output = !this.options.inlineText?this.output.replace(match[0],text):this.output.replace(match[0],match[0] + text);}context$2$0.next = 4;break;case 19:context$2$0.next = 36;break;case 21:match = undefined;case 22:if(!((match = utils.matches(this.regex,this.input)) !== null)){context$2$0.next = 36;break;}embedUrl = 'https://player.vimeo.com/video/' + match[3];data = undefined,text = undefined;if(!this.options.videoDetails){context$2$0.next = 32;break;}context$2$0.next = 28;return _regeneratorRuntime.awrap(this.data(match[3]));case 28:data = context$2$0.sent;text = helper.detailsTemplate(this.formatData(data),embedUrl);context$2$0.next = 33;break;case 32:text = helper.template(embedUrl,this.options);case 33:this.embeds.push({text:text,index:match.index});context$2$0.next = 22;break;case 36:return context$2$0.abrupt('return',[this.output,this.embeds]);case 39:context$2$0.prev = 39;context$2$0.t0 = context$2$0['catch'](0);console.log(context$2$0.t0);case 42:case 'end':return context$2$0.stop();}},null,this,[[0,39]]);};return Vimeo;})();

var Youtube=(function(){function Youtube(input,output,options,embeds){_classCallCheck(this,Youtube);this.input = input;this.output = output;this.options = options;this.embeds = embeds;this.regex = /https?:\/\/(?:[0-9A-Z-]+\.)?(?:youtu\.be\/|youtube\.com(?:\/embed\/|\/v\/|\/watch\?v=|\/ytscreeningroom\?v=|\/feeds\/api\/videos\/|\/user\S*[^\w\-\s]|\S*[^\w\-\s]))([\w\-]{11})[?=&+%\w-]*/gi;this.service = 'youtube';}Youtube.prototype.formatData = function formatData(data){return {title:data.snippet.title,thumbnail:data.snippet.thumbnails.medium.url,rawDescription:data.snippet.description,views:data.statistics.viewCount,likes:data.statistics.likeCount,description:utils.truncate(data.snippet.description,150),url:'https://www.youtube.com/watch?v=' + data.id,id:data.id,host:'youtube'};};Youtube.prototype.data = function data(id){var url,response,data;return _regeneratorRuntime.async(function data$(context$2$0){while(1) switch(context$2$0.prev = context$2$0.next){case 0:context$2$0.prev = 0;url = 'https://www.googleapis.com/youtube/v3/videos?id=' + id + '&key=' + this.options.googleAuthKey + '&part=snippet,statistics';context$2$0.next = 4;return _regeneratorRuntime.awrap(fetch(url));case 4:response = context$2$0.sent;context$2$0.next = 7;return _regeneratorRuntime.awrap(response.json());case 7:data = context$2$0.sent;return context$2$0.abrupt('return',data.items[0]);case 11:context$2$0.prev = 11;context$2$0.t0 = context$2$0['catch'](0);console.log(context$2$0.t0);case 14:case 'end':return context$2$0.stop();}},null,this,[[0,11]]);};Youtube.prototype.process = function process(){var regexInline,match,id,embedUrl,data,text;return _regeneratorRuntime.async(function process$(context$2$0){while(1) switch(context$2$0.prev = context$2$0.next){case 0:context$2$0.prev = 0;if(utils.ifInline(this.options,this.service)){context$2$0.next = 21;break;}regexInline = this.options.link?new RegExp('([^>]*' + this.regex.source + ')</a>','gi'):new RegExp('([^\\s]*' + this.regex.source + ')','gi');match = undefined;case 4:if(!((match = utils.matches(regexInline,this.output)) !== null)){context$2$0.next = 19;break;}id = match[2];embedUrl = 'https://www.youtube.com/embed/' + id;data = undefined,text = undefined;if(!this.options.videoDetails){context$2$0.next = 15;break;}context$2$0.next = 11;return _regeneratorRuntime.awrap(this.data(id));case 11:data = context$2$0.sent;text = helper.detailsTemplate(this.formatData(data),embedUrl);context$2$0.next = 16;break;case 15:text = helper.template(embedUrl,this.options);case 16:if(this.options.link){this.output = !this.options.inlineText?this.output.replace(match[0],text + '</a>'):this.output.replace(match[0],match[0] + text);}else {this.output = !this.options.inlineText?this.output.replace(match[0],text):this.output.replace(match[0],match[0] + text);}context$2$0.next = 4;break;case 19:context$2$0.next = 37;break;case 21:match = undefined;case 22:if(!((match = utils.matches(this.regex,this.input)) !== null)){context$2$0.next = 37;break;}id = match[1];embedUrl = 'https://www.youtube.com/embed/' + id;data = undefined,text = undefined;if(!this.options.videoDetails){context$2$0.next = 33;break;}context$2$0.next = 29;return _regeneratorRuntime.awrap(this.data(id));case 29:data = context$2$0.sent;text = helper.detailsTemplate(this.formatData(data),embedUrl);context$2$0.next = 34;break;case 33:text = helper.template(embedUrl,this.options);case 34:this.embeds.push({text:text,index:match.index});context$2$0.next = 22;break;case 37:context$2$0.next = 42;break;case 39:context$2$0.prev = 39;context$2$0.t0 = context$2$0['catch'](0);console.log(context$2$0.t0);case 42:return context$2$0.abrupt('return',[this.output,this.embeds]);case 43:case 'end':return context$2$0.stop();}},null,this,[[0,39]]);};return Youtube;})();

var Vine=(function(_Base){_inherits(Vine,_Base);function Vine(input,output,options,embeds){_classCallCheck(this,Vine);_Base.call(this,input,output,options,embeds);this.regex = /vine.co\/v\/[a-zA-Z0-9]+/gi;this.service = 'vine';}Vine.prototype.template = function template(match){var config=this.options.vineOptions;var a=match.split('/');var id=a[a.length - 1];return '<div class="ejs-vine">\n\t\t<iframe class="ejs-vine-iframe" src="https://vine.co/v/' + id + '/embed/' + config.type + '" height="' + config.height + '" width="' + config.width + '"></iframe>\n\t\t</div>';};return Vine;})(Base);

var BasicVideo=(function(_Base){_inherits(BasicVideo,_Base);function BasicVideo(input,output,options,embeds){_classCallCheck(this,BasicVideo);_Base.call(this,input,output,options,embeds);this.regex = /(?:https?):\/\/\S*\.(?:ogv|webm|mp4)/gi;this.service = 'video';}BasicVideo.prototype.template = function template(match){return '<div class="ejs-video ejs-embed">\n\t\t<div class="ejs-video-player">\n\t\t<div class="ejs-player">\n\t\t<video src="' + match + '" class="ejs-video-js video-js" controls></video>\n\t\t</div>\n\t\t</div>\n\t\t</div>';};return BasicVideo;})(Base);

var LiveLeak=(function(_Base){_inherits(LiveLeak,_Base);function LiveLeak(input,output,options,embeds){_classCallCheck(this,LiveLeak);_Base.call(this,input,output,options,embeds);this.regex = /liveleak.com\/view\?i=[a-zA-Z0-9_]+/gi;this.service = 'liveleak';}LiveLeak.prototype.template = function template(match){var dimensions=utils.dimensions(this.options);return '<div class="ejs-video ejs-embed"><iframe src="http://www.liveleak.com/e/' + match.split('=')[1] + '" height="' + dimensions.height + '" width="' + dimensions.width + '"></iframe></div>';};return LiveLeak;})(Base);

var Ustream=(function(_Base){_inherits(Ustream,_Base);function Ustream(input,output,options,embeds){_classCallCheck(this,Ustream);_Base.call(this,input,output,options,embeds);this.regex = /ustream.tv\/[a-z\/0-9]*/gi;this.service = 'ustream';}Ustream.prototype.template = function template(match){var id=match.split('/');id.splice(1,0,'embed');var dimensions=utils.dimensions(this.options);return '<div class="ejs-embed ejs-ustream"><iframe src="//www.' + id.join('/') + '" height="' + dimensions.height + '" width="' + dimensions.width + '"></iframe></div>';};return Ustream;})(Base);

var Dailymotion=(function(_Base){_inherits(Dailymotion,_Base);function Dailymotion(input,output,options,embeds){_classCallCheck(this,Dailymotion);_Base.call(this,input,output,options,embeds);this.regex = /dailymotion.com\/video\/[a-zA-Z0-9-_]+/gi;this.service = 'dailymotion';}Dailymotion.prototype.template = function template(match){var dimensions=utils.dimensions(this.options);var a=match.split('/');var id=a[a.length - 1];return '<div class="ejs-video ejs-embed">\n\t\t<iframe src="http://www.dailymotion.com/embed/video/' + id + '" height="' + dimensions.height + '" width="' + dimensions.width + '"></iframe>\n\t\t</div>';};return Dailymotion;})(Base);

var Ted=(function(_Base){_inherits(Ted,_Base);function Ted(input,output,options,embeds){_classCallCheck(this,Ted);_Base.call(this,input,output,options,embeds);this.regex = /ted.com\/talks\/[a-zA-Z0-9_]+/gi;this.service = 'ted';}Ted.prototype.template = function template(match){var dimensions=utils.dimensions(this.options);var a=match.split('/');var id=a[a.length - 1];return '<div class="ejs-embed ejs-ted"><iframe src="http://embed.ted.com/talks/' + id + '.html" height="' + dimensions.height + '" width="' + dimensions.width + '"></iframe></div>';};return Ted;})(Base);

var Video=(function(){function Video(input,output,options,embeds){_classCallCheck(this,Video);this.input = input;this.output = output;this.options = options;this.embeds = embeds;}Video.prototype.process = function process(){var input,output,options,embeds,_ref,_ref2,_ref3,_ref4,_ref5,_ref6,_ref7,_ref8;return _regeneratorRuntime.async(function process$(context$2$0){while(1) switch(context$2$0.prev = context$2$0.next){case 0:input = this.input;output = this.output;options = this.options;embeds = this.embeds;_ref = utils.ifEmbed(options,'ted') && build.true?new Ted(input,output,options,embeds).process():[output,embeds];output = _ref[0];embeds = _ref[1];_ref2 = utils.ifEmbed(options,'dailymotion') && build.true?new Dailymotion(input,output,options,embeds).process():[output,embeds];output = _ref2[0];embeds = _ref2[1];_ref3 = utils.ifEmbed(options,'ustream') && build.true?new Ustream(input,output,options,embeds).process():[output,embeds];output = _ref3[0];embeds = _ref3[1];_ref4 = utils.ifEmbed(options,'liveleak') && build.true?new LiveLeak(input,output,options,embeds).process():[output,embeds];output = _ref4[0];embeds = _ref4[1];_ref5 = options.videoEmbed && build.true?new BasicVideo(input,output,options,embeds).process():[output,embeds];output = _ref5[0];embeds = _ref5[1];_ref6 = utils.ifEmbed(options,'vine') && build.true?new Vine(input,output,options,embeds).process():[output,embeds];output = _ref6[0];embeds = _ref6[1];if(!(utils.ifEmbed(options,'youtube') && build.true)){context$2$0.next = 28;break;}context$2$0.next = 25;return _regeneratorRuntime.awrap(new Youtube(input,output,options,embeds).process());case 25:context$2$0.t0 = context$2$0.sent;context$2$0.next = 29;break;case 28:context$2$0.t0 = [output,embeds];case 29:_ref7 = context$2$0.t0;output = _ref7[0];embeds = _ref7[1];if(!(utils.ifEmbed(options,'vimeo') && build.true)){context$2$0.next = 38;break;}context$2$0.next = 35;return _regeneratorRuntime.awrap(new Vimeo(input,output,options,embeds).process());case 35:context$2$0.t1 = context$2$0.sent;context$2$0.next = 39;break;case 38:context$2$0.t1 = [output,embeds];case 39:_ref8 = context$2$0.t1;output = _ref8[0];embeds = _ref8[1];return context$2$0.abrupt('return',[output,embeds]);case 43:case 'end':return context$2$0.stop();}},null,this);};return Video;})();

var Gist=(function(_Base){_inherits(Gist,_Base);function Gist(input,output,options,embeds){var _this=this;_classCallCheck(this,Gist);_Base.call(this,input,output,options,embeds);this.regex = /gist.github.com\/[a-zA-Z0-9_-]+\/([a-zA-Z0-9]+)/g;this.service = 'gist';this.options.element.addEventListener('rendered',function(){_this.load();});}Gist.prototype.template = function template(match){return '<div class="ejs-gist" data-src="' + match + '"></div>';};Gist.prototype.load = function load(){var gists=this.options.element.getElementsByClassName('ejs-gist');for(var i=0;i < gists.length;i++) {var gistFrame=document.createElement("iframe");gistFrame.setAttribute("width","100%");gistFrame.id = 'ejs-gist-' + i;var zone=gists[i];zone.innerHTML = "";zone.appendChild(gistFrame); // Create the iframe's document
var url=gists[i].getAttribute('data-src');url = url.indexOf('http') === -1?'https://' + url:url;var gistFrameHTML='<html><base target="_parent"/><body onload="parent.document.getElementById(\'ejs-gist-' + i + '\').style.height=parseInt(document.body.scrollHeight)+20+\'px\'"><script type="text/javascript" src="' + url + '.js"></script></body></html>'; // Set iframe's document with a trigger for this document to adjust the height
var gistFrameDoc=gistFrame.document;if(gistFrame.contentDocument){gistFrameDoc = gistFrame.contentDocument;}else if(gistFrame.contentWindow){gistFrameDoc = gistFrame.contentWindow.document;}gistFrameDoc.open();gistFrameDoc.writeln(gistFrameHTML);gistFrameDoc.close();}};return Gist;})(Base);

var JsFiddle=(function(_Base){_inherits(JsFiddle,_Base);function JsFiddle(input,output,options,embeds){_classCallCheck(this,JsFiddle);_Base.call(this,input,output,options,embeds);this.regex = /jsfiddle.net\/[a-zA-Z0-9_]+\/[a-zA-Z0-9_]+/gi;this.service = 'jsfiddle';}JsFiddle.prototype.template = function template(id){return '<div class="ejs-embed ejs-jsfiddle"><iframe height="' + this.options.codeEmbedHeight + '" src="http://' + id + '/embedded"></iframe></div>';};return JsFiddle;})(Base);

var CodePen=(function(_Base){_inherits(CodePen,_Base);function CodePen(input,output,options,embeds){_classCallCheck(this,CodePen);_Base.call(this,input,output,options,embeds);this.regex = /http:\/\/codepen.io\/([A-Za-z0-9_]+)\/pen\/([A-Za-z0-9_]+)/gi;this.service = 'codepen';}CodePen.prototype.template = function template(id){return '<div class="ejs-embed ejs-codepen">\n\t\t\t<iframe scrolling="no" height="' + this.options.codeEmbedHeight + '" src="' + id.replace(/\/pen\//,'/embed/') + '/?height=' + this.options.codeEmbedHeight + '"></iframe>\'\n\t\t</div>';};return CodePen;})(Base);

var JsBin=(function(_Base){_inherits(JsBin,_Base);function JsBin(input,output,options,embeds){_classCallCheck(this,JsBin);_Base.call(this,input,output,options,embeds);this.regex = /jsbin.com\/[a-zA-Z0-9_]+\/[0-9_]+/gi;this.service = 'jsbin';}JsBin.prototype.template = function template(id){return '<div class="ejs-jsbin ejs-embed">\n\t\t<iframe height="' + this.options.codeEmbedHeight + '" class="jsbin-embed foo" src="http://' + id + '/embed?html,js,output"></iframe>\n\t\t</div>';};return JsBin;})(Base);

var Plunker=(function(_Base){_inherits(Plunker,_Base);function Plunker(input,output,options,embeds){_classCallCheck(this,Plunker);_Base.call(this,input,output,options,embeds);this.regex = /plnkr.co\/edit\/[a-zA-Z0-9\?=]+/gi;this.service = 'plunker';}Plunker.prototype.template = function template(match){var a=match.split('?')[0].split('/');var id=a[a.length - 1];return '<div class="ejs-embed ejs-plunker">\n\t\t<iframe class="ne-plunker" src="http://embed.plnkr.co/' + id + '" height="' + this.options.codeEmbedHeight + '"></iframe>\n\t\t</div>';};return Plunker;})(Base);

var Ideone=(function(_Base){_inherits(Ideone,_Base);function Ideone(input,output,options,embeds){_classCallCheck(this,Ideone);_Base.call(this,input,output,options,embeds);this.regex = /ideone.com\/[a-zA-Z0-9]{6}/gi;this.service = 'ideone';}Ideone.prototype.template = function template(match){return '<div class="ejs-ideone ejs-embed"><iframe src="http://ideone.com/embed/' + match.split('/') + '" frameborder="0" height="' + this.options.codeEmbedHeight + '"></iframe></div>';};return Ideone;})(Base);

var Highlight=(function(){function Highlight(output,options){_classCallCheck(this,Highlight);if(!hljs){throw new ReferenceError('\'hljs is not defined. HighlightJS library is needed to highlight code. Visit https://highlightjs.org/\'');}this.output = output;this.options = options;this.regex = /(`{3})(\s|[a-z]+)\s*([\s\S]*?[^`])\s*\1(?!`)/gm;this.inlineCodeRegex = /(`)\s*([\s\S]*?[^`])\s*\1(?!`)/gm;} /**
     * Encodes the characters like <, > and space and replaces them with
     * &lt;, &gt; and &gt; respectively.
     * @param  {string} code The string that has to be encoded.
     * @return {string}      The encoded string
     */Highlight.prototype.encode = function encode(code){code = code.replace(/&amp;/gm,'');code = code.replace(/&lt;/g,'<');code = code.replace(/&gt;/g,'>');return code;}; /**
     * removes whitespace characters
     * @param  {string} code The string from which the whitespace has to be removed
     * @return {string}
     */Highlight.prototype.trimSpace = function trimSpace(code){code = code.replace(/^([ \t]*)/g,''); // leading whitespace
code = code.replace(/[ \t]*$/g,''); // trailing whitespace
return code;}; /**
     * Places the code and the language name in the required template
     * @param {string} processedCode
     * @param {string} language
     * @return {string}
     */Highlight.prototype.addTemplate = function addTemplate(processedCode,language){return '<pre><code class="ejs-code hljs ' + language + '">' + processedCode.value + '</code></pre>';}; /**
     * Replaces the code block with the pre tags and returns a string having the code
     * formatting using Highlight.js.
     * => Matches the string with the regex and finds the code written in three back-ticks ```
     * => Detects whether any language has been provided by the user.
     *     The format supported by embed.js is
     *         ```[language-name]
     *         var a = 2;
     *         ```
     * => Trims all the unnecessary spaces and newlines from the code.
     * => Passes the code to `hljs.highlightAuto(code, language)` which returns a formatted string
     *     having the html tags for styling. The `language` here is optional. In case we don't pass the
     *     language, it tries to detect the language itself.
     * => Replaces the code string in the template with the formatted string
     * @return {string} The string in which the code is formatted
     */Highlight.prototype.process = function process(){var _this=this;this.output = this.output.replace(this.inlineCodeRegex,function(match,group1,group2){return '<code>' + group2 + '</code>';});var result=this.output.replace(this.regex,function(match,group1,group2,group3){var code=group3;code = _this.trimSpace(code);code = _this.encode(code); // to prevent auto-linking. Not necessary in code
// *blocks*, but in code spans. Will be converted
// back after the auto-linker runs.
code = code.replace(/:\/\//g,'~P');var language=group2.split('\n')[0];var highlightedCode=undefined;if(language){highlightedCode = hljs.highlightAuto(code,[language]);}else {highlightedCode = hljs.highlightAuto(code);language = highlightedCode.language;}return _this.addTemplate(highlightedCode,language);});return result;};return Highlight;})();

var Code=(function(){function Code(input,output,options,embeds){_classCallCheck(this,Code);this.input = input;this.output = output;this.options = options;this.embeds = embeds;}Code.prototype.process = function process(){try{var input=this.input;var output=this.output;var options=this.options;var embeds=this.embeds;output = options.highlightCode && !options.marked && true?new Highlight(output,options).process():output;var _ref=utils.ifEmbed(options,'ideone') && true?new Ideone(input,output,options,embeds).process():[output,embeds];output = _ref[0];embeds = _ref[1];var _ref2=utils.ifEmbed(options,'plunker') && true?new Plunker(input,output,options,embeds).process():[output,embeds];output = _ref2[0];embeds = _ref2[1];var _ref3=utils.ifEmbed(options,'jsbin') && true?new JsBin(input,output,options,embeds).process():[output,embeds];output = _ref3[0];embeds = _ref3[1];var _ref4=utils.ifEmbed(options,'codepen') && true?new CodePen(input,output,options,embeds).process():[output,embeds];output = _ref4[0];embeds = _ref4[1];var _ref5=utils.ifEmbed(options,'jsfiddle') && true?new JsFiddle(input,output,options,embeds).process():[output,embeds];output = _ref5[0];embeds = _ref5[1];var _ref6=utils.ifEmbed(options,'gist') && true?new Gist(input,output,options,embeds).process():[output,embeds];output = _ref6[0];embeds = _ref6[1];return [output,embeds];}catch(error) {console.log(error);}};return Code;})();

var Smiley=(function(){function Smiley(input,options){_classCallCheck(this,Smiley);this.input = ' ' + input + ' '; //hack to consider the first and last element
var defaultIcons=[{'text':' :) ','code':'&#xe60a'},{'text':' :D ','code':'&#xe608'},{'text':' :d ','code':'&#xe608'},{'text':' :( ','code':'&#xe60e'},{'text':' :/ ','code':'&#xe620'},{'text':' :P ','code':'&#xe60c'},{'text':' :p ','code':'&#xe60c'},{'text':' 3:) ','code':'&#xe618'},{'text':' (^) ','code':'&#xe607'},{'text':' ;) ','code':'&#xe610'},{'text':' :o ','code':'&#xe61a'},{'text':' -_- ','code':'&#xe61e'},{'text':' (y) ','code':'&#xe606'},{'text':' :* ','code':'&#xe604'},{'text':' &lt;3 ','code':'&#xe604'},{'text':' <3 ','code':'&#xe604'},{'text':' &lt;/3 ','code':'&#xe605'},{'text':' </3 ','code':'&#xe605'},{'text':' ^_^ ','code':'&#xe612'},{'text':' 8-) ','code':'&#xe614'},{'text':' 8| ','code':'&#xe614'},{'text':' :S ','code':'&#xe61c'},{'text':' :s ','code':'&#xe61c'}];this.icons = options.customFontIcons.length?options.customFontIcons:defaultIcons;this.EscapedSymbols = this.icons.map(function(val){return '' + utils.escapeRegExp(val.text);});this.smileyRegex = new RegExp('(' + this.EscapedSymbols.join('|') + ')','g');}Smiley.prototype.process = function process(){var _this=this;var processedString=this.input.replace(this.smileyRegex,function(match,text){var index=_this.EscapedSymbols.indexOf(utils.escapeRegExp(text));var code=_this.icons[index].code;return ' <span class="icon-emoticon" title="' + text + '">' + code + '</span> ';});return processedString.substring(1,processedString.length - 1);};return Smiley;})();

var Emoji=(function(){function Emoji(input,options){_classCallCheck(this,Emoji);this.input = input;this.options = options;this.emojiList = ['bowtie','smile','laughing','blush','smiley','relaxed','smirk','heart_eyes','kissing_heart','kissing_closed_eyes','flushed','relieved','satisfied','grin','wink','stuck_out_tongue_winking_eye','stuck_out_tongue_closed_eyes','grinning','kissing','winky_face','kissing_smiling_eyes','stuck_out_tongue','sleeping','worried','frowning','anguished','open_mouth','grimacing','confused','hushed','expressionless','unamused','sweat_smile','sweat','wow','disappointed_relieved','weary','pensive','disappointed','confounded','fearful','cold_sweat','persevere','cry','sob','joy','astonished','scream','neckbeard','tired_face','angry','rage','triumph','sleepy','yum','mask','sunglasses','dizzy_face','imp','smiling_imp','neutral_face','no_mouth','innocent','alien','yellow_heart','blue_heart','purple_heart','heart','green_heart','broken_heart','heartbeat','heartpulse','two_hearts','revolving_hearts','cupid','sparkling_heart','sparkles','star','star2','dizzy','boom','collision','anger','exclamation','question','grey_exclamation','grey_question','zzz','dash','sweat_drops','notes','musical_note','fire','hankey','poop','shit','\\+1','thumbsup','-1','thumbsdown','ok_hand','punch','facepunch','fist','v','wave','hand','raised_hand','open_hands','point_up','point_down','point_left','point_right','raised_hands','pray','point_up_2','clap','muscle','metal','fu','walking','runner','running','couple','family','two_men_holding_hands','two_women_holding_hands','dancer','dancers','ok_woman','no_good','information_desk_person','raising_hand','bride_with_veil','person_with_pouting_face','person_frowning','bow','couplekiss','couple_with_heart','massage','haircut','nail_care','boy','girl','woman','man','baby','older_woman','older_man','person_with_blond_hair','man_with_gua_pi_mao','man_with_turban','construction_worker','cop','angel','princess','smiley_cat','smile_cat','heart_eyes_cat','kissing_cat','smirk_cat','scream_cat','crying_cat_face','joy_cat','pouting_cat','japanese_ogre','japanese_goblin','see_no_evil','hear_no_evil','speak_no_evil','guardsman','skull','feet','lips','kiss','droplet','ear','eyes','nose','tongue','love_letter','bust_in_silhouette','busts_in_silhouette','speech_balloon','thought_balloon','feelsgood','finnadie','goberserk','godmode','hurtrealbad','rage1','rage2','rage3','rage4','suspect','trollface','sunny','umbrella','cloud','snowflake','snowman','zap','cyclone','foggy','ocean','cat','dog','mouse','hamster','rabbit','wolf','frog','tiger','koala','bear','pig','pig_nose','cow','boar','monkey_face','monkey','horse','racehorse','camel','sheep','elephant','panda_face','snake','bird','baby_chick','hatched_chick','hatching_chick','chicken','penguin','turtle','bug','honeybee','ant','beetle','snail','octopus','tropical_fish','fish','whale','whale2','dolphin','cow2','ram','rat','water_buffalo','tiger2','rabbit2','dragon','goat','rooster','dog2','pig2','mouse2','ox','dragon_face','blowfish','crocodile','dromedary_camel','leopard','cat2','poodle','paw_prints','bouquet','cherry_blossom','tulip','four_leaf_clover','rose','sunflower','hibiscus','maple_leaf','leaves','fallen_leaf','herb','mushroom','cactus','palm_tree','evergreen_tree','deciduous_tree','chestnut','seedling','blossom','ear_of_rice','shell','globe_with_meridians','sun_with_face','full_moon_with_face','new_moon_with_face','new_moon','waxing_crescent_moon','first_quarter_moon','waxing_gibbous_moon','full_moon','waning_gibbous_moon','last_quarter_moon','waning_crescent_moon','last_quarter_moon_with_face','first_quarter_moon_with_face','moon','earth_africa','earth_americas','earth_asia','volcano','milky_way','partly_sunny','octocat','squirrel','bamboo','gift_heart','dolls','school_satchel','mortar_board','flags','fireworks','sparkler','wind_chime','rice_scene','jack_o_lantern','ghost','santa','christmas_tree','gift','bell','no_bell','tanabata_tree','tada','confetti_ball','balloon','crystal_ball','cd','dvd','floppy_disk','camera','video_camera','movie_camera','computer','tv','iphone','phone','telephone','telephone_receiver','pager','fax','minidisc','vhs','sound','speaker','mute','loudspeaker','mega','hourglass','hourglass_flowing_sand','alarm_clock','watch','radio','satellite','loop','mag','mag_right','unlock','lock','lock_with_ink_pen','closed_lock_with_key','key','bulb','flashlight','high_brightness','low_brightness','electric_plug','battery','calling','email','mailbox','postbox','bath','bathtub','shower','toilet','wrench','nut_and_bolt','hammer','seat','moneybag','yen','dollar','pound','euro','credit_card','money_with_wings','e-mail','inbox_tray','outbox_tray','envelope','incoming_envelope','postal_horn','mailbox_closed','mailbox_with_mail','mailbox_with_no_mail','door','smoking','bomb','gun','hocho','pill','syringe','page_facing_up','page_with_curl','bookmark_tabs','bar_chart','chart_with_upwards_trend','chart_with_downwards_trend','scroll','clipboard','calendar','date','card_index','file_folder','open_file_folder','scissors','pushpin','paperclip','black_nib','pencil2','straight_ruler','triangular_ruler','closed_book','green_book','blue_book','orange_book','notebook','notebook_with_decorative_cover','ledger','books','bookmark','name_badge','microscope','telescope','newspaper','football','basketball','soccer','baseball','tennis','8ball','rugby_football','bowling','golf','mountain_bicyclist','bicyclist','horse_racing','snowboarder','swimmer','surfer','ski','spades','hearts','clubs','diamonds','gem','ring','trophy','musical_score','musical_keyboard','violin','space_invader','video_game','black_joker','flower_playing_cards','game_die','dart','mahjong','clapper','memo','pencil','book','art','microphone','headphones','trumpet','saxophone','guitar','shoe','sandal','high_heel','lipstick','boot','shirt','tshirt','necktie','womans_clothes','dress','running_shirt_with_sash','jeans','kimono','bikini','ribbon','tophat','crown','womans_hat','mans_shoe','closed_umbrella','briefcase','handbag','pouch','purse','eyeglasses','fishing_pole_and_fish','coffee','tea','sake','baby_bottle','beer','beers','cocktail','tropical_drink','wine_glass','fork_and_knife','pizza','hamburger','fries','poultry_leg','meat_on_bone','spaghetti','curry','fried_shrimp','bento','sushi','fish_cake','rice_ball','rice_cracker','rice','ramen','stew','oden','dango','egg','bread','doughnut','custard','icecream','ice_cream','shaved_ice','birthday','cake','cookie','chocolate_bar','candy','lollipop','honey_pot','apple','green_apple','tangerine','lemon','cherries','grapes','watermelon','strawberry','peach','melon','banana','pear','pineapple','sweet_potato','eggplant','tomato','corn','house','house_with_garden','school','office','post_office','hospital','bank','convenience_store','love_hotel','hotel','wedding','church','department_store','european_post_office','city_sunrise','city_sunset','japanese_castle','european_castle','tent','factory','tokyo_tower','japan','mount_fuji','sunrise_over_mountains','sunrise','stars','themoreyouknow','tmyk','statue_of_liberty','bridge_at_night','carousel_horse','rainbow','ferris_wheel','fountain','roller_coaster','ship','speedboat','boat','sailboat','rowboat','anchor','rocket','airplane','helicopter','steam_locomotive','tram','mountain_railway','bike','aerial_tramway','suspension_railway','mountain_cableway','tractor','blue_car','oncoming_automobile','car','red_car','taxi','oncoming_taxi','articulated_lorry','bus','oncoming_bus','rotating_light','police_car','oncoming_police_car','fire_engine','ambulance','minibus','truck','train','station','train2','bullettrain_front','bullettrain_side','light_rail','monorail','railway_car','trolleybus','ticket','fuelpump','vertical_traffic_light','traffic_light','warning','construction','beginner','atm','slot_machine','busstop','barber','hotsprings','checkered_flag','crossed_flags','izakaya_lantern','moyai','circus_tent','performing_arts','round_pushpin','triangular_flag_on_post','jp','kr','cn','us','fr','es','it','ru','gb','uk','de','one','two','three','four','five','six','seven','eight','nine','keycap_ten','1234','zero','hash','symbols','arrow_backward','arrow_down','arrow_forward','arrow_left','capital_abcd','abcd','abc','arrow_lower_left','arrow_lower_right','arrow_right','arrow_up','arrow_upper_left','arrow_upper_right','arrow_double_down','arrow_double_up','arrow_down_small','arrow_heading_down','arrow_heading_up','leftwards_arrow_with_hook','arrow_right_hook','left_right_arrow','arrow_up_down','arrow_up_small','arrows_clockwise','arrows_counterclockwise','rewind','fast_forward','information_source','ok','twisted_rightwards_arrows','repeat','repeat_one','new','top','up','cool','free','ng','cinema','koko','signal_strength','u5272','u5408','u55b6','u6307','u6708','u6709','u6e80','u7121','u7533','u7a7a','u7981','sa','restroom','mens','womens','baby_symbol','no_smoking','parking','wheelchair','metro','baggage_claim','accept','wc','potable_water','put_litter_in_its_place','secret','congratulations','m','passport_control','left_luggage','customs','ideograph_advantage','cl','sos','id','no_entry_sign','underage','no_mobile_phones','do_not_litter','non-potable_water','no_bicycles','no_pedestrians','children_crossing','no_entry','eight_spoked_asterisk','eight_pointed_black_star','heart_decoration','vs','vibration_mode','mobile_phone_off','chart','currency_exchange','aries','taurus','gemini','cancer','leo','virgo','libra','scorpius','sagittarius','capricorn','aquarius','pisces','ophiuchus','six_pointed_star','negative_squared_cross_mark','a','b','ab','o2','diamond_shape_with_a_dot_inside','recycle','end','on','soon','clock1','clock130','clock10','clock1030','clock11','clock1130','clock12','clock1230','clock2','clock230','clock3','clock330','clock4','clock430','clock5','clock530','clock6','clock630','clock7','clock730','clock8','clock830','clock9','clock930','heavy_dollar_sign','copyright','registered','tm','x','heavy_exclamation_mark','bangbang','interrobang','o','heavy_multiplication_x','heavy_plus_sign','heavy_minus_sign','heavy_division_sign','white_flower','100','heavy_check_mark','ballot_box_with_check','radio_button','link','curly_loop','wavy_dash','part_alternation_mark','trident','black_square','white_square','white_check_mark','black_square_button','white_square_button','black_circle','white_circle','red_circle','large_blue_circle','large_blue_diamond','large_orange_diamond','small_blue_diamond','small_orange_diamond','small_red_triangle','small_red_triangle_down','shipit'];this.allEmojiList = this.emojiList.concat(this.options.customEmoji);this.emojiRegex = new RegExp(':(' + this.allEmojiList.join('|') + '):','g');}Emoji.prototype.process = function process(){return this.input.replace(this.emojiRegex,function(match,text){return '<span class="emoticon emoticon-' + text + '" title=":' + text + ':"></span>';});};return Emoji;})();

var Markdown=(function(){function Markdown(output,options){_classCallCheck(this,Markdown);if(!window.marked)throw new ReferenceError('marked.js is not loaded.');this.output = output;this.options = options;}Markdown.prototype.process = function process(){var _this=this;var renderer=new marked.Renderer(); /**
         * Change the default template of the code blocks provided by marked.js
         * @param  {string} text The code block string
         * @return {string}      the new template
         */renderer.code = function(text){var highlightedCode=window.hljs?hljs.highlightAuto(text):{value:text};var language=window.hljs?highlightedCode.language:'';return '<pre><code class="ejs-code hljs ' + language + '">' + highlightedCode.value + '</code></pre>';};renderer.link = function(href,title,text){if(href.indexOf('&lt;/a') === -1)return href;if(href.match(/&gt;(.+)&lt;\/a/gi)){if(!title)title = '';return '<a href="' + RegExp.$1 + '" rel=' + _this.options.linkOptions.rel + '" target="' + _this.options.linkOptions.target + '" title="' + title + '">' + text + '</a>';}};renderer.image = function(href,title,text){if(href.indexOf('&lt;/a') === -1)return href;if(href.match(/&gt;(.+)&lt;\/a/gi)){if(!title)title = '';return '<div class="ejs-image ejs-embed"><div class="ne-image-wrapper"><img src="' + RegExp.$1 + '" title="' + title + '" alt="' + text + '"/></div></div>';}};renderer.paragraph = function(text){return '<p> ' + text + ' </p>';}; //for font smiley in end.
//Fix for heading that should be actually present in marked.js
//if gfm is true the `## Heading` is acceptable but `##Heading` is not
marked.Lexer.rules.gfm.heading = marked.Lexer.rules.normal.heading;marked.Lexer.rules.tables.heading = marked.Lexer.rules.normal.heading;this.options.markedOptions.renderer = renderer;var output=marked(this.output,this.options.markedOptions);return output;};return Markdown;})();

var Url=(function(){function Url(input,options){_classCallCheck(this,Url);this.input = input;this.options = options;this.urlRegex = /((href|src)=["']|)(\b(https?|ftp|file):\/\/[-A-Z0-9+&@#\/%?=~_|!:,.;]*[-A-Z0-9+&@#\/%=~_|])|(?:https?:\/\/)?(?:(?:0rz\.tw)|(?:1link\.in)|(?:1url\.com)|(?:2\.gp)|(?:2big\.at)|(?:2tu\.us)|(?:3\.ly)|(?:307\.to)|(?:4ms\.me)|(?:4sq\.com)|(?:4url\.cc)|(?:6url\.com)|(?:7\.ly)|(?:a\.gg)|(?:a\.nf)|(?:aa\.cx)|(?:abcurl\.net)|(?:ad\.vu)|(?:adf\.ly)|(?:adjix\.com)|(?:afx\.cc)|(?:all\.fuseurl.com)|(?:alturl\.com)|(?:amzn\.to)|(?:ar\.gy)|(?:arst\.ch)|(?:atu\.ca)|(?:azc\.cc)|(?:b23\.ru)|(?:b2l\.me)|(?:bacn\.me)|(?:bcool\.bz)|(?:binged\.it)|(?:bit\.ly)|(?:buff\.ly)|(?:bizj\.us)|(?:bloat\.me)|(?:bravo\.ly)|(?:bsa\.ly)|(?:budurl\.com)|(?:canurl\.com)|(?:chilp\.it)|(?:chzb\.gr)|(?:cl\.lk)|(?:cl\.ly)|(?:clck\.ru)|(?:cli\.gs)|(?:cliccami\.info)|(?:clickthru\.ca)|(?:clop\.in)|(?:conta\.cc)|(?:cort\.as)|(?:cot\.ag)|(?:crks\.me)|(?:ctvr\.us)|(?:cutt\.us)|(?:dai\.ly)|(?:decenturl\.com)|(?:dfl8\.me)|(?:digbig\.com)|(?:digg\.com)|(?:disq\.us)|(?:dld\.bz)|(?:dlvr\.it)|(?:do\.my)|(?:doiop\.com)|(?:dopen\.us)|(?:easyuri\.com)|(?:easyurl\.net)|(?:eepurl\.com)|(?:eweri\.com)|(?:fa\.by)|(?:fav\.me)|(?:fb\.me)|(?:fbshare\.me)|(?:ff\.im)|(?:fff\.to)|(?:fire\.to)|(?:firsturl\.de)|(?:firsturl\.net)|(?:flic\.kr)|(?:flq\.us)|(?:fly2\.ws)|(?:fon\.gs)|(?:freak\.to)|(?:fuseurl\.com)|(?:fuzzy\.to)|(?:fwd4\.me)|(?:fwib\.net)|(?:g\.ro.lt)|(?:gizmo\.do)|(?:gl\.am)|(?:go\.9nl.com)|(?:go\.ign.com)|(?:go\.usa.gov)|(?:goo\.gl)|(?:goshrink\.com)|(?:gurl\.es)|(?:hex\.io)|(?:hiderefer\.com)|(?:hmm\.ph)|(?:href\.in)|(?:hsblinks\.com)|(?:htxt\.it)|(?:huff\.to)|(?:hulu\.com)|(?:hurl\.me)|(?:hurl\.ws)|(?:icanhaz\.com)|(?:idek\.net)|(?:ilix\.in)|(?:is\.gd)|(?:its\.my)|(?:ix\.lt)|(?:j\.mp)|(?:jijr\.com)|(?:kl\.am)|(?:klck\.me)|(?:korta\.nu)|(?:krunchd\.com)|(?:l9k\.net)|(?:lat\.ms)|(?:liip\.to)|(?:liltext\.com)|(?:linkbee\.com)|(?:linkbun\.ch)|(?:liurl\.cn)|(?:ln-s\.net)|(?:ln-s\.ru)|(?:lnk\.gd)|(?:lnk\.ms)|(?:lnkd\.in)|(?:lnkurl\.com)|(?:lru\.jp)|(?:lt\.tl)|(?:lurl\.no)|(?:macte\.ch)|(?:mash\.to)|(?:merky\.de)|(?:migre\.me)|(?:miniurl\.com)|(?:minurl\.fr)|(?:mke\.me)|(?:moby\.to)|(?:moourl\.com)|(?:mrte\.ch)|(?:myloc\.me)|(?:myurl\.in)|(?:n\.pr)|(?:nbc\.co)|(?:nblo\.gs)|(?:nn\.nf)|(?:not\.my)|(?:notlong\.com)|(?:nsfw\.in)|(?:nutshellurl\.com)|(?:nxy\.in)|(?:nyti\.ms)|(?:o-x\.fr)|(?:oc1\.us)|(?:om\.ly)|(?:omf\.gd)|(?:omoikane\.net)|(?:on\.cnn.com)|(?:on\.mktw.net)|(?:onforb\.es)|(?:orz\.se)|(?:ow\.ly)|(?:ping\.fm)|(?:pli\.gs)|(?:pnt\.me)|(?:politi\.co)|(?:post\.ly)|(?:pp\.gg)|(?:profile\.to)|(?:ptiturl\.com)|(?:pub\.vitrue.com)|(?:qlnk\.net)|(?:qte\.me)|(?:qu\.tc)|(?:qy\.fi)|(?:r\.im)|(?:rb6\.me)|(?:read\.bi)|(?:readthis\.ca)|(?:reallytinyurl\.com)|(?:redir\.ec)|(?:redirects\.ca)|(?:redirx\.com)|(?:retwt\.me)|(?:ri\.ms)|(?:rickroll\.it)|(?:riz\.gd)|(?:rt\.nu)|(?:ru\.ly)|(?:rubyurl\.com)|(?:rurl\.org)|(?:rww\.tw)|(?:s4c\.in)|(?:s7y\.us)|(?:safe\.mn)|(?:sameurl\.com)|(?:sdut\.us)|(?:shar\.es)|(?:shink\.de)|(?:shorl\.com)|(?:short\.ie)|(?:short\.to)|(?:shortlinks\.co.uk)|(?:shorturl\.com)|(?:shout\.to)|(?:show\.my)|(?:shrinkify\.com)|(?:shrinkr\.com)|(?:shrt\.fr)|(?:shrt\.st)|(?:shrten\.com)|(?:shrunkin\.com)|(?:simurl\.com)|(?:slate\.me)|(?:smallr\.com)|(?:smsh\.me)|(?:smurl\.name)|(?:sn\.im)|(?:snipr\.com)|(?:snipurl\.com)|(?:snurl\.com)|(?:sp2\.ro)|(?:spedr\.com)|(?:srnk\.net)|(?:srs\.li)|(?:starturl\.com)|(?:su\.pr)|(?:surl\.co.uk)|(?:surl\.hu)|(?:t\.cn)|(?:t\.co)|(?:t\.lh.com)|(?:ta\.gd)|(?:tbd\.ly)|(?:tcrn\.ch)|(?:tgr\.me)|(?:tgr\.ph)|(?:tighturl\.com)|(?:tiniuri\.com)|(?:tiny\.cc)|(?:tiny\.ly)|(?:tiny\.pl)|(?:tinylink\.in)|(?:tinyuri\.ca)|(?:tinyurl\.com)|(?:tl\.gd)|(?:tmi\.me)|(?:tnij\.org)|(?:tnw\.to)|(?:tny\.com)|(?:to\.ly)|(?:togoto\.us)|(?:totc\.us)|(?:toysr\.us)|(?:tpm\.ly)|(?:tr\.im)|(?:tra\.kz)|(?:trunc\.it)|(?:twhub\.com)|(?:twirl\.at)|(?:twitclicks\.com)|(?:twitterurl\.net)|(?:twitterurl\.org)|(?:twiturl\.de)|(?:twurl\.cc)|(?:twurl\.nl)|(?:u\.mavrev.com)|(?:u\.nu)|(?:u76\.org)|(?:ub0\.cc)|(?:ulu\.lu)|(?:updating\.me)|(?:ur1\.ca)|(?:url\.az)|(?:url\.co.uk)|(?:url\.ie)|(?:url360\.me)|(?:url4\.eu)|(?:urlborg\.com)|(?:urlbrief\.com)|(?:urlcover\.com)|(?:urlcut\.com)|(?:urlenco\.de)|(?:urli\.nl)|(?:urls\.im)|(?:urlshorteningservicefortwitter\.com)|(?:urlx\.ie)|(?:urlzen\.com)|(?:usat\.ly)|(?:use\.my)|(?:vb\.ly)|(?:vgn\.am)|(?:vl\.am)|(?:vm\.lc)|(?:w55\.de)|(?:wapo\.st)|(?:wapurl\.co.uk)|(?:wipi\.es)|(?:wp\.me)|(?:x\.vu)|(?:xr\.com)|(?:xrl\.in)|(?:xrl\.us)|(?:xurl\.es)|(?:xurl\.jp)|(?:y\.ahoo.it)|(?:yatuc\.com)|(?:ye\.pe)|(?:yep\.it)|(?:yfrog\.com)|(?:yhoo\.it)|(?:yiyd\.com)|(?:youtu\.be)|(?:yuarel\.com)|(?:z0p\.de)|(?:zi\.ma)|(?:zi\.mu)|(?:zipmyurl\.com)|(?:zud\.me)|(?:zurl\.ws)|(?:zz\.gd)|(?:zzang\.kr)|(?:›\.ws)|(?:✩\.ws)|(?:✿\.ws)|(?:❥\.ws)|(?:➔\.ws)|(?:➞\.ws)|(?:➡\.ws)|(?:➨\.ws)|(?:➯\.ws)|(?:➹\.ws)|(?:➽\.ws))\/[a-z0-9]*/gi;}Url.prototype.process = function process(){var config=this.options.linkOptions;return this.input.replace(this.urlRegex,function(match){var extension=match.split('.')[match.split('.').length - 1];if(config.exclude.indexOf(extension) === -1){return '<a href="' + utils.toUrl(match) + '" rel="' + config.rel + '" target="' + config.target + '">' + match + '</a>';}return match;});};return Url;})();

(function(window){var globalOptions={};var defaultOptions={marked:false,markedOptions:{},link:true,linkOptions:{target:'self',exclude:['pdf'],rel:''},emoji:true,customEmoji:[],fontIcons:true,customFontIcons:[],highlightCode:true,videoJS:false,videojsOptions:{fluid:true,preload:'metadata'},locationEmbed:true,mapOptions:{mode:'place'},tweetsEmbed:true,tweetOptions:{maxWidth:550,hideMedia:false,hideThread:false,align:'none',lang:'en'},imageEmbed:true,videoEmbed:true,videoHeight:null,videoWidth:null,videoDetails:true,audioEmbed:true,excludeEmbed:[],inlineEmbed:[],inlineText:true,codeEmbedHeight:500,vineOptions:{maxWidth:null,type:'postcard', //'postcard' or 'simple' embedding
responsive:true,width:350,height:460},googleAuthKey:'',soundCloudOptions:{height:160,themeColor:'f50000', //Hex Code of the player theme color
autoPlay:false,hideRelated:false,showComments:true,showUser:true,showReposts:false,visual:false, //Show/hide the big preview image
download:false //Show/Hide download buttons
},beforeEmbedJSApply:function beforeEmbedJSApply(){},afterEmbedJSApply:function afterEmbedJSApply(){},onVideoShow:function onVideoShow(){},onTweetsLoad:function onTweetsLoad(){},videojsCallback:function videojsCallback(){}};var EmbedJS=(function(){ /**
         * The constructor takes two arguements. The first one is the options object and the second one is the
         * optional string . If the user wants to provide a string directly instead of the element, he can do that.
         * In case the user provides both the input element and the string, the input string will be taken from the element
         * and the provided string won't be processed.
         *
         * @param  {object} options The options object
         * @param  {string} input   [optional] The string to be processed
         * @return {null}
         */function EmbedJS(options,input){_classCallCheck(this,EmbedJS); /**
             * We have created a clone of the original options to make sure that the original object
             * isn't altered.
             */var defOpts=utils.cloneObject(defaultOptions);var globOpts=utils.cloneObject(globalOptions); //merge global options with the default options
var globOptions=utils.deepExtend(defOpts,globOpts); //merge global options with the overriding options provided by the user as an options
//object while creating a new instance of embed.js
this.options = utils.deepExtend(globOptions,options);if(!this.options.element && !input)throw ReferenceError("You need to pass an element or the string that needs to be processed");if(this.options.element){this.element = this.options.element;this.input = this.element.innerHTML;}else {this.input = input;}} /**
         * Processes the string and performs all the insertions and manipulations based on
         * the options and the input provided by the user. This is an asynchronous function using the async/await
         * feature of ES7 and this returns a promise which is resolved once the result data is ready
         * @return {string} The processes resulting string
         */EmbedJS.prototype.process = function process(){var input,options,embeds,output,_process,_ref,_ref2,_process2,_process3,_ref3,result;return _regeneratorRuntime.async(function process$(context$3$0){while(1) switch(context$3$0.prev = context$3$0.next){case 0:input = this.input;options = this.options;embeds = [];output = '';this.options.beforeEmbedJSApply();output = options.link && true?new Url(input,options).process():input;output = options.marked && false?new Markdown(output,options).process():output;output = options.emoji && true?new Emoji(output,options).process():output;output = options.fontIcons && true?new Smiley(output,options).process():output;_process = new Code(input,output,options,embeds).process();output = _process[0];embeds = _process[1];context$3$0.next = 14;return _regeneratorRuntime.awrap(new Video(input,output,options,embeds).process());case 14:_ref = context$3$0.sent;output = _ref[0];embeds = _ref[1];if(!options.locationEmbed){context$3$0.next = 23;break;}context$3$0.next = 20;return _regeneratorRuntime.awrap(new Gmap(input,output,options,embeds).process());case 20:context$3$0.t0 = context$3$0.sent;context$3$0.next = 24;break;case 23:context$3$0.t0 = [output,embeds];case 24:_ref2 = context$3$0.t0;output = _ref2[0];embeds = _ref2[1];_process2 = new Audio(input,output,options,embeds).process();output = _process2[0];embeds = _process2[1];_process3 = new Image(input,output,options,embeds).process();output = _process3[0];embeds = _process3[1];if(!(options.tweetsEmbed && false)){context$3$0.next = 40;break;}this.twitter = new Twitter(input,output,options,embeds);context$3$0.next = 37;return _regeneratorRuntime.awrap(this.twitter.process());case 37:_ref3 = context$3$0.sent;output = _ref3[0];embeds = _ref3[1];case 40:result = utils.createText(output,embeds);return context$3$0.abrupt('return',result);case 42:case 'end':return context$3$0.stop();}},null,this);}; /**
         * First processes the data by calling the .process() and then renders the data in the div
         * => Loads the twitter widgets
         * => Executes the onTweetsLoad() once all the tweets have been rendered
         * => Applies video.js on the media (both audio and video)
         * => Triggers video loading on click of the video preview
         * => Executes afterEmbedJSApply() once everything is done.
         *
         * @return {}
         */EmbedJS.prototype.render = function render(){var result,event;return _regeneratorRuntime.async(function render$(context$3$0){while(1) switch(context$3$0.prev = context$3$0.next){case 0:if(this.element){context$3$0.next = 2;break;}throw new Error('You didn\'t pass an element while creating this instance. render() method can\'t work without an element');case 2:context$3$0.next = 4;return _regeneratorRuntime.awrap(this.process());case 4:result = context$3$0.sent;this.element.innerHTML = result;helper$1.applyVideoJS(this.options);helper$1.play('ejs-video-thumb',this.options);event = new Event('rendered');this.element.dispatchEvent(event);this.options.afterEmbedJSApply();case 11:case 'end':return context$3$0.stop();}},null,this);}; /**
         * returns the resulting string based on the input and the options passed by the user.
         * @param  {Function} callback Function that is executed once the data is ready
         * @return {}
         */EmbedJS.prototype.text = function text(callback){var result;return _regeneratorRuntime.async(function text$(context$3$0){while(1) switch(context$3$0.prev = context$3$0.next){case 0:context$3$0.next = 2;return _regeneratorRuntime.awrap(this.process());case 2:result = context$3$0.sent;callback(result,this.input);case 4:case 'end':return context$3$0.stop();}},null,this);}; /**
         * The destroy method destroys all the listeners and replaces the rih text with the original text in the
         * element.
         * @return {null}
         */EmbedJS.prototype.destroy = function destroy(){if(!this.element)throw new Error('destroy() method only if an element had been passed in the options object');helper$1.destroy('ejs-video-thumb',this.options);this.element.removeEventListener('rendered',this.twitter.load(),false);this.element.innerHTML = this.input;};return EmbedJS;})();var ejs={instances:[],elements:[], /**
         * Sets options globally
         * @param {object} options
         */setOptions:function setOptions(options){globalOptions = utils.deepExtend(defaultOptions,options);}, /**
         * Applies embed.js to all the elements with the class name provided as option
         * @param  {string} className
         * @return {null}
         */applyEmbedJS:function applyEmbedJS(className){this.elements = document.getElementsByClassName(className);for(var i=0;i < this.elements.length;i++) {var option={element:this.elements[i]};this.instances[i] = new EmbedJS(option);this.instances[i].render();}}, /**
         * Destroys all the instances of EmbedJS created by using ejs.applyEmbedJS method.
         * @return {null}
         */destroyEmbedJS:function destroyEmbedJS(){for(var i=0;i < this.elements.length;i++) {this.instances[i].destroy();}}};window.EmbedJS = EmbedJS;window.ejs = ejs;})(window);